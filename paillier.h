/*
 * Paillier's Cryptosystem
 */

#ifndef ENGINE_PAILLIER_PAILLIER_H_
#define ENGINE_PAILLIER_PAILLIER_H_

#include <openssl/opensslconf.h>
#include <openssl/bn.h>
#include <openssl/asn1.h>

#define PAILLIER_MIN_KEY_BITS   2048
#define PAILLIER_OP_UNDEF       0
#define PAILLIER_OP_ADD         1
#define PAILLIER_OP_SCALAR_MUL  2

struct paillier_st {
  int bits;
  BIGNUM *n;              /* public key */
  BIGNUM *lambda;         /* private key, lambda(n) = lcm(p-1, q-1) */
  BIGNUM *n_squared;      /* online */
  BIGNUM *n_plusone;      /* online */
  BIGNUM *x;              /* online */

  int references;
  int flags;
  CRYPTO_EX_DATA ex_data;
  CRYPTO_RWLOCK *lock;
};

typedef struct paillier_st PAILLIER;

class Paillier {
 public:
  Paillier();
  // ~Pailllier();
  PAILLIER *PAILLIER_new(void);
  void PAILLIER_free(PAILLIER *key);

  int PAILLIER_size(const PAILLIER *key);
  int PAILLIER_security_bits(const PAILLIER *key);

  int PAILLIER_generate_key(PAILLIER *key, int bits/* as RSA N */);
  int PAILLIER_check_key(PAILLIER *key);
  int PAILLIER_encrypt(BIGNUM *out, const BIGNUM *in, PAILLIER *key);
  int PAILLIER_decrypt(BIGNUM *out, const BIGNUM *in, PAILLIER *key);
  int PAILLIER_ciphertext_add(BIGNUM *r, const BIGNUM *a, const BIGNUM *b, PAILLIER *key);
  int PAILLIER_ciphertext_scalar_mul(BIGNUM *r, const BIGNUM *scalar, const BIGNUM *a, PAILLIER *key);

  int PAILLIER_up_ref(PAILLIER *key);
};

DECLARE_ASN1_ENCODE_FUNCTIONS_const(PAILLIER, PaillierPrivateKey)
DECLARE_ASN1_ENCODE_FUNCTIONS_const(PAILLIER, PaillierPublicKey)


/* BEGIN ERROR CODES */
/*
 * The following lines are auto generated by the script mkerr.pl. Any changes
 * made after this point may be overwritten when the script is next run.
 */

int ERR_load_PAILLIER_strings(void);

/* Error codes for the PAILLIER functions. */

/* Function codes. */
# define PAILLIER_F_OLD_PAILLIER_PRIV_DECODE              110
# define PAILLIER_F_PAILLIER_CHECK_KEY                    100
# define PAILLIER_F_PAILLIER_CIPHERTEXT_ADD               101
# define PAILLIER_F_PAILLIER_CIPHERTEXT_SCALAR_MUL        102
# define PAILLIER_F_PAILLIER_DECRYPT                      103
# define PAILLIER_F_PAILLIER_ENCRYPT                      104
# define PAILLIER_F_PAILLIER_GENERATE_KEY                 105
# define PAILLIER_F_PAILLIER_NEW                          106
# define PAILLIER_F_PAILLIER_PLAINTEXT_SIZE               117
# define PAILLIER_F_PAILLIER_PRIV_DECODE                  111
# define PAILLIER_F_PAILLIER_PRIV_ENCODE                  112
# define PAILLIER_F_PAILLIER_PUB_DECODE                   107
# define PAILLIER_F_PAILLIER_SIZE                         118
# define PAILLIER_F_PKEY_PAILLIER_CTRL                    113
# define PAILLIER_F_PKEY_PAILLIER_CTRL_STR                114
# define PAILLIER_F_PKEY_PAILLIER_DECRYPT                 108
# define PAILLIER_F_PKEY_PAILLIER_ENCRYPT                 109
# define PAILLIER_F_PKEY_PAILLIER_INIT                    115
# define PAILLIER_F_PKEY_PAILLIER_KEYGEN                  116

/* Reason codes. */
# define PAILLIER_R_BUFFER_TOO_SMALL                      104
# define PAILLIER_R_DECODE_ERROR                          105
# define PAILLIER_R_GENERATE_PRIME_FAILED                 100
# define PAILLIER_R_INVALID_PLAINTEXT                     101
# define PAILLIER_R_KEY_SIZE_TOO_SMALL                    106
# define PAILLIER_R_MALLOC_FAILED                         102
# define PAILLIER_R_NOT_IMPLEMENTED                       103
# define PAILLIER_R_VALUE_MISSING                         107


#endif  // ENGINE_PAILLIER_PAILLIER_H_
